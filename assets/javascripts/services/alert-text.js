// Generated by CoffeeScript 1.10.0
(function() {
  define(['ng', 's/services'], function(angular, services) {
    'use strict';
    return services.factory('alerttext', function($filter) {
      return {
        sensorHubEvent: function(message) {
          var alertText, eventDate, eventResolved, eventType;
          eventDate = $filter('date')(message.updateTime, 'MMM d h:mm a', 'UTC');
          eventResolved = message.sensorEventEnd !== 0;
          if (eventResolved) {
            eventType = message.sensorEventEnd;
          } else {
            eventType = message.sensorEventStart;
          }
          alertText = (function() {
            switch (eventType) {
              case 1:
                return '<i class="icon-droplet"></i> Water detect';
              case 2:
                return '<i class="icon-eye"></i> Motion detect';
              case 3:
                return '<i class="icon-temperature"></i> Low temperature';
              case 4:
                return '<i class="icon-temperature"></i> High temperature';
              case 5:
                return '<i class="icon-droplets"></i> Low humidity';
              case 6:
                return '<i class="icon-droplets"></i> High humidity';
              case 7:
                return '<i class="icon-lamp"></i> Low light';
              case 8:
                return '<i class="icon-lamp"></i> High light';
              case 9:
                return '<i class="icon-reply-all2"></i> Movement';
            }
          })();
          if (eventResolved) {
            alertText += ' resolved';
          }
          alertText += ' <span class="small-text">' + eventDate + '</span>';
          return alertText;
        },
        gatewayEvent: function(message) {
          switch (message.gatewayEventCode) {
            case 1:
              return '<i class="icon-battery-full"> Going from line power to backup battery';
            case 2:
              return '<i class="icon-power-cord"> Going from backup battery to line power';
            case 3:
              return '<i class="icon-battery-half"></i> Transition from high to low battery voltage';
            case 4:
              return '<i class="icon-battery-empty"></i> Transition from low to critical low battery voltage';
            case 5:
              return '<i class="icon-power-cord"></i> Going from shipping/dead to power on (SDG connected to line power)';
            case 6:
              return '<i class="icon-connection"></i> Restart';
          }
        }
      };
    });
  });

}).call(this);
